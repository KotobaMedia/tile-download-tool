name: Build and Release

permissions:
  contents: write

on:
  push:
    tags:
    - v*

env:
  BINARY: tile-download-tool

jobs:
  build:
    strategy:
      matrix:
        job:
          - os: ubuntu-latest
            arch: x86_64-unknown-linux-gnu
          - os: macos-latest
            arch: aarch64-apple-darwin
          - os: windows-latest
            arch: x86_64-pc-windows-msvc

    runs-on: ${{ matrix.job.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v5
      - name: Set up Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.job.arch }}
      - name: Build
        run: cargo build --release --target ${{ matrix.job.arch }}

      - name: Import macOS codesign certs
        uses: apple-actions/import-codesign-certs@v5
        if: matrix.job.os == 'macos-latest'
        with:
          p12-file-base64: ${{ secrets.MACOS_CERT_P12 }}
          p12-password: ${{ secrets.MACOS_CERT_PWD }}

      - name: Codesign (macOS)
        if: matrix.job.os == 'macos-latest'
        run: |
          BIN=target/${{ matrix.job.arch }}/release/${{ env.BINARY }}
          CERT_NAME="$(security find-identity -v -p codesigning | awk -F\" '/Developer ID Application/ {print $2; exit}')"
          codesign --force --options runtime --timestamp --sign "$CERT_NAME" "$BIN"
          codesign --verify --deep --strict --verbose=2 "$BIN"
          spctl -a -vv "$BIN" || true

      - name: Create archive (Linux)
        if: matrix.job.os == 'ubuntu-latest'
        run: |
          mkdir -p target/artifacts
          cp target/${{ matrix.job.arch }}/release/${{ env.BINARY }} target/artifacts/
          cd target/artifacts
          zip ${{ env.BINARY }}-${{ matrix.job.arch }}.zip ${{ env.BINARY }}

      - name: Create archive (macOS)
        if: matrix.job.os == 'macos-latest'
        run: |
          mkdir -p target/artifacts
          cp target/${{ matrix.job.arch }}/release/${{ env.BINARY }} target/artifacts/
          cd target/artifacts
          zip -9r ${{ env.BINARY }}-${{ matrix.job.arch }}.zip ${{ env.BINARY }}

      - name: Notarize (macOS)
        if: matrix.job.os == 'macos-latest'
        run: |
          KEY=$RUNNER_TEMP/app_store_connect_key.json
          PRIVATE_KEY_PEM=$RUNNER_TEMP/private_key.pem
          echo '${{ secrets.APP_STORE_CONNECT_KEY }}' > $KEY

          echo '-----BEGIN PRIVATE KEY-----' > $PRIVATE_KEY_PEM
          jq -r '.private_key' $KEY >> $PRIVATE_KEY_PEM
          echo '-----END PRIVATE KEY-----' >> $PRIVATE_KEY_PEM

          xcrun notarytool submit "target/artifacts/${{ env.BINARY }}-${{ matrix.job.arch }}.zip" \
            --key-id "$(jq -r '.key_id' $KEY)" \
            --issuer "$(jq -r '.issuer_id' $KEY)" \
            --key $PRIVATE_KEY_PEM \
            --wait

      - name: Create archive (Windows)
        if: matrix.job.os == 'windows-latest'
        run: |
          New-Item -ItemType Directory -Force -Path target/artifacts
          cp target/${{ matrix.job.arch }}/release/${{ env.BINARY }}.exe target/artifacts/
          cd target/artifacts
          7z a ${{ env.BINARY }}-${{ matrix.job.arch }}.zip ${{ env.BINARY }}.exe

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.job.arch }}-release
          path: target/artifacts/${{ env.BINARY }}-${{ matrix.job.arch }}.zip

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download artifact for x86_64-unknown-linux-gnu
        uses: actions/download-artifact@v5
        with:
          name: x86_64-unknown-linux-gnu-release
          path: artifacts/x86_64

      - name: Download artifact for x86_64-pc-windows-msvc
        uses: actions/download-artifact@v5
        with:
          name: x86_64-pc-windows-msvc-release
          path: artifacts/x86_64

      - name: Download artifact for aarch64-apple-darwin
        uses: actions/download-artifact@v5
        with:
          name: aarch64-apple-darwin-release
          path: artifacts/aarch64

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          # Use the tag name without the refs/ prefix
          tag_name: ${{ github.ref_name }}
          files: |
            artifacts/x86_64/${{ env.BINARY }}-x86_64-unknown-linux-gnu.zip
            artifacts/x86_64/${{ env.BINARY }}-x86_64-pc-windows-msvc.zip
            artifacts/aarch64/${{ env.BINARY }}-aarch64-apple-darwin.zip
